name: Pre-commit auto update
description: A GitHub Action that will automatically update your pre-commit hooks version and create a PR
author: Brokenpip3
branding:
  color: green
  icon: command
inputs:
  pr-create:
    description: "Specify if you want to create the PR or not"
    required: false
    default: true
  pr-title:
    description: "PR Title"
    required: false
    default: "chore(pre-commit): auto update hooks"
  pr-branch:
    description: "PR Branch"
    required: false
    default: "auto-update-pre-commit-hooks"
  pr-targetbranch:
    description: "PR Target branch"
    required: false
    default: "main"
  github-token:
    description: "Github Token, required if PR create is true"
    required: false
  update-latest:
    description: "Instead of using the latest tag use the latest commit, equals to run with '--bleeding-edge'"
    required: false
    default: false
  update-freeze:
    description: "Store hashes in rev instead of tag names, equals to run with '--freeze'"
    required: false
    default: false
  update-repo:
    description: "Only update a specifi repository, equals to run with '--repo'"
    required: false
    default: ""
  update-allfiles:
    description: "Run hooks vs all the files of the repo"
    required: false
    default: false
outputs:
  update-hit:
    description: "True/False if changes in .pre-commit-config.yaml are present"
    value: ${{ (steps.auto-update.outputs.updates != '') }}
  options:
    description: "Options used in pre-commit update command"
    value: ${{ steps.auto-update.outputs.options }}

runs:
  using: composite
  steps:
    - name: "setup python and cache"
      uses: actions/setup-python@v4
      id: python
      with:
        python-version: 3.11

    - name: "Install pre-commit"
      run: pip install pre-commit
      id: install
      shell: bash

    - name: "Pre-commit autoupdate"
      id: auto-update
      shell: bash
      env:
        REPO: ${{ inputs.update-repo }}
      run: |
        OPTS=()
        [[ "${{ inputs.update-latest }}" = "true"  ]] && OPTS+=("--bleeding-edge")
        [[ "${{ inputs.update-freeze }}" = "true"  ]] && OPTS+=("--freeze")
        [[ "${REPO}" != ""  ]] && OPTS+=("--repo=$REPO")
        pre-commit autoupdate "${OPTS[@]//\'/}"
        echo "options=${OPTS[@]//\'/}"  >> "$GITHUB_OUTPUT"
        git diff --quiet .pre-commit-config.yaml || echo "updates=true" >> "$GITHUB_OUTPUT"

    - name: "Update all files"
      if: inputs.update-allfiles == 'true'
      id: update-all-files
      shell: bash
      run: pre-commit run --all-files

    - name: "Create PR"
      uses: peter-evans/create-pull-request@v5
      if: inputs.pr-create == 'true'
      id: pull-request
      with:
        base: ${{ inputs.pr-targetbranch }}
        branch: ${{ inputs.pr-branch }}
        title: ${{ inputs.pr-title }}
        body: "This is an automation, check the updated pre-commit hooks and target files"
        draft: false
        allow_empty: false
        delete-branch: true
        token: ${{ inputs.github-token }}
